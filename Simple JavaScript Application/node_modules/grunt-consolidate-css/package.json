{
  "name": "grunt-consolidate-css",
  "description": "Consolidates, converts and minifies your CSS, SASS, and SCSS files directed purely by your HTML",
  "version": "0.4.2",
  "homepage": "https://github.com/izb/grunt-consolidate-css",
  "author": {
    "name": "Ian Beveridge",
    "email": "ian.beveridge@gmail.com"
  },
  "contributors": [],
  "repository": {
    "type": "git",
    "url": "git://github.com/izb/grunt-consolidate-css.git"
  },
  "bugs": {
    "url": "https://github.com/izb/grunt-consolidate-css/issues"
  },
  "main": "grunt.js",
  "engines": {
    "node": ">=0.8.1"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "grunt": "~0.3.11"
  },
  "devDependencies": {
    "grunt": "~0.3.11"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-consolidate-css\r\n\r\nConsolidates and minifies your CSS files on a per-page basis\r\n\r\n## Getting Started, Getting Help\r\n- [Grunt repo](https://github.com/cowboy/grunt)\r\n- [Getting started with grunt](https://github.com/cowboy/grunt/blob/master/docs/getting_started.md)\r\n- [Twitter](http://twitter.com/izb)\r\n\r\n## Documentation\r\n\r\n### Setting up\r\n\r\nInstall grunt (If you haven't already) and this plugin with\r\n\r\n    $ npm install grunt\r\n    $ npm install grunt-consolidate-css\r\n\r\nIf you want to minify your CSS, you'll need `java` on your PATH.\r\n\r\nIf you want to use SASS/SCSS stylesheets, you'll also need the `scss` converter on your PATH.\r\n\r\n### Adding to your build process\r\n\r\nModify your `grunt.js` file by adding the following line:\r\n\r\n    grunt.loadNpmTasks('grunt-consolidate-css');\r\n\r\nThen add some configuration for the plugin like so:\r\n\r\n    grunt.initConfig({\r\n        ...\r\n        consolidatecss: {\r\n          app: {\r\n            src: ['path/to/html/files/*.html', 'path/to/html/files/*.php'],\r\n            options: {\r\n                cssdir: 'stylesheets'\r\n            }\r\n          }\r\n        },\r\n        ...\r\n    });\r\n\r\nThen just run `grunt consolidatecss`.\r\n\r\n### Basic output\r\n\r\nYour files will be modified from something like this:\r\n\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"file2.css\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"file1.css\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"subdir/file2.css\">\r\n\r\ninto something like this:\r\n\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"css.min/file1,file2,subdir$file2.min.css\">\r\n\r\nwith all the files consolidated and minified using YUICompressor.\r\n\r\n### Grouping files\r\n\r\nIf you want to group CSS files together into separate outputs, just leave a blank\r\nline between the `<link>` tags, e.g.\r\n\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"file2.css\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"file1.css\">\r\n\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"subdir/file2.css\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"subdir/file3.css\">\r\n\r\nwill become\r\n\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"css.min/file1,file2.min.css\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"css.min/subdir$file2,subdir$file3.min.css\">\r\n\r\n### SCSS/SASS\r\n\r\nYou can mix CSS and SCSS/SASS files together in the same groups. The plugin will work out what's what\r\nfrom the file extension and will convert the files transparently.\r\n\r\n    <link rel=\"stylesheet\" type=\"text/sass\" href=\"file1.sass\">\r\n    <link rel=\"stylesheet\" type=\"text/scss\" href=\"file2.scss\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"file3.css\">\r\n\r\nwill become\r\n\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"file1,file2,file3.min.css\">\r\n\r\nAll output as one consolidated, minified, pure CSS file.\r\n\r\n### Cross-page validation\r\n\r\nThe plugin is slightly strict about how you treat your CSS files, which seems like\r\nan acceptable trade-off against not needing to configure your consolidation at all.\r\n\r\nIt will detect link tags on different pages that contain the same CSS files, but in a\r\ndifferent order and fail your build until you fix it. This ensures that the same group of\r\nCSS files produces the same output, cached across pages in the browser.\r\n\r\nWhy not just reorder them automatically? Because order in CSS can often matter, and it's\r\nbetter to avoid the possibility of a tool automatically generating a hard-to-debug\r\nlayout problem altogether by forcing you to decide on the order explicitely.\r\n\r\n## Options\r\n- `min` Toggles minification of the CSS. It's true by default. If false, then the files will only be concatenated.\r\n- `yuijarpath` YUICompressor 2.4.7 comes build-in, but pass the path to a jar of your own here to override it.\r\n- `cssdir` The subdirectory that sits alongside the processed HTML that will hold the CSS. By default this will either be `css` or `css.min`.\r\n- `pathPrefix` This is a prefix added to all CSS link URLs, e.g. a domain name. Sometimes it's useful to use absolute URLs on your test environment.\r\n- `intermediates` By default, the plugin cleans up after itself, deleting all intermediate stages of CSS that are not the final result. Set this to false to keep the unminified and unconsolidated forms of your CSS.\r\n- `basedir` *Required* The root of your input directories. Used to calculate where the output CSS should be placed.\r\n- `dest` *Required* Where the processed HTML and CSS should go. Pages will keep their folder structure, CSS will be placed into `cssdir`.\r\n\r\n## Release History\r\n- 0.2.1 - First version with SCSS/SASS support\r\n- 0.1.2 - First working version.\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-consolidate-css@0.4.2",
  "_from": "grunt-consolidate-css@"
}
